{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cl\\xE9ment\\\\OneDrive\\\\Documents\\\\Scoreboard\\\\ccoreboard\\\\src\\\\pages\\\\SorarePlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport bcrypt from \"bcryptjs\";\nimport axios from 'axios';\nimport gql from 'graphql-tag';\nimport { Mutation } from '@apollo/react-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SorarePlayer = () => {\n  _s();\n\n  const UPDATE_TODO = gql`\n    mutation SignInMutation($input: signInInput!) {\n        signIn(input: $input) {\n          currentUser {\n            slug\n            jwtToken(aud: \"<YourAud>\") {\n              token\n              expiredAt\n            }\n          }\n          errors {\n            message\n          }\n        }\n      }\n      \n`;\n  const [hashed, setHashed] = useState();\n  useEffect(() => {\n    axios.get(`http://localhost:8080/getHashedPassword`).then(res => {\n      axios.get;\n      setHashed(res.data.salt);\n    });\n  }, []); //const hashedPassword = bcrypt.hashSync(\"ClementEric2811\", salt);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: hashed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SorarePlayer, \"QNx48jr2WA9bRX0J4HmXjxM+1xI=\");\n\n_c = SorarePlayer;\nexport default SorarePlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SorarePlayer\");","map":{"version":3,"sources":["C:/Users/ClÃ©ment/OneDrive/Documents/Scoreboard/ccoreboard/src/pages/SorarePlayer.js"],"names":["React","useEffect","useState","bcrypt","axios","gql","Mutation","SorarePlayer","UPDATE_TODO","hashed","setHashed","get","then","res","data","salt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,QAAuB,0BAAvB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,WAAW,GAAGH,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBI;AAmBA,QAAM,CAACI,MAAD,EAAQC,SAAR,IAAmBR,QAAQ,EAAjC;AACAD,EAAAA,SAAS,CAAE,MAAM;AACbG,IAAAA,KAAK,CAACO,GAAN,CAAW,yCAAX,EACCC,IADD,CACMC,GAAG,IAAI;AACTT,MAAAA,KAAK,CAACO,GAAN;AACAD,MAAAA,SAAS,CAACG,GAAG,CAACC,IAAJ,CAASC,IAAV,CAAT;AACH,KAJD;AAKH,GANQ,EAMP,EANO,CAAT,CArBuB,CA4BvB;;AACA,sBACI;AAAA,2BACI;AAAA,gBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlCD;;GAAMF,Y;;KAAAA,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport bcrypt from \"bcryptjs\";\r\nimport axios from 'axios';\r\nimport gql from 'graphql-tag'\r\nimport {Mutation} from '@apollo/react-components'\r\n\r\nconst SorarePlayer = () => {\r\n    const UPDATE_TODO = gql`\r\n    mutation SignInMutation($input: signInInput!) {\r\n        signIn(input: $input) {\r\n          currentUser {\r\n            slug\r\n            jwtToken(aud: \"<YourAud>\") {\r\n              token\r\n              expiredAt\r\n            }\r\n          }\r\n          errors {\r\n            message\r\n          }\r\n        }\r\n      }\r\n      \r\n`;\r\n\r\n    \r\n    const [hashed,setHashed]=useState();\r\n    useEffect (() => {\r\n        axios.get(`http://localhost:8080/getHashedPassword`)\r\n        .then(res => {\r\n            axios.get\r\n            setHashed(res.data.salt)\r\n        })\r\n    },[])\r\n    //const hashedPassword = bcrypt.hashSync(\"ClementEric2811\", salt);\r\n    return(\r\n        <div>\r\n            <h1>{hashed}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SorarePlayer;"]},"metadata":{},"sourceType":"module"}