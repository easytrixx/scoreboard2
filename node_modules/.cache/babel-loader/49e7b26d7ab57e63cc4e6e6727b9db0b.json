{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cl\\xE9ment\\\\OneDrive\\\\Documents\\\\Scoreboard\\\\ccoreboard\\\\src\\\\pages\\\\Data.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport { useLocation } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Data = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const MINUTE_MS = 30000;\n  const [nameHomeTeam, setHomeTeam] = useState();\n  const [nameAwayTeam, setAwayTeam] = useState();\n  const [scoreHome, setScoreHome] = useState();\n  const [scoreAway, setScoreAway] = useState();\n  const [logoHomeTeam, setLogoHomeTeam] = useState([]);\n  const [logoAwayTeam, setLogoAwayTeam] = useState([]);\n\n  const getData = () => {\n    fetch(\"https://api.sofascore.com/api/v1/event/\" + id).then(response => {\n      return response.json();\n    }).then(users => {\n      setScoreHome(users.homeScore.current);\n      setAwayScore(users.awayScore.current);\n      setHomeTeam(users.homeTeam.name);\n      setAwayTeam(users.awayTeam.name);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n    const interval = setInterval(() => {\n      getData();\n    }, MINUTE_MS);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Data, \"U3IAS/4unZKNKghDz22JhRyivlE=\", false, function () {\n  return [useParams];\n});\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"sources":["C:/Users/ClÃ©ment/OneDrive/Documents/Scoreboard/ccoreboard/src/pages/Data.js"],"names":["React","useState","useEffect","Grid","Paper","Avatar","makeStyles","Typography","blue","useLocation","useParams","Data","id","MINUTE_MS","nameHomeTeam","setHomeTeam","nameAwayTeam","setAwayTeam","scoreHome","setScoreHome","scoreAway","setScoreAway","logoHomeTeam","setLogoHomeTeam","logoAwayTeam","setLogoAwayTeam","getData","fetch","then","response","json","users","homeScore","current","setAwayScore","awayScore","homeTeam","name","awayTeam","interval","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAMG,SAAS,GAAG,KAAlB;AACA,QAAM,CAACC,YAAD,EAAeC,WAAf,IAA8Bd,QAAQ,EAA5C;AACA,QAAM,CAACe,YAAD,EAAeC,WAAf,IAA8BhB,QAAQ,EAA5C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,EAA1C;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,EAA1C;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,EAAD,CAAhD;;AACA,QAAMyB,OAAO,GAAG,MAAM;AAClBC,IAAAA,KAAK,CAAC,4CAA0Cf,EAA3C,CAAL,CACCgB,IADD,CACMC,QAAQ,IAAG;AACZ,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACJ,KAHD,EAICF,IAJD,CAIMG,KAAK,IAAI;AACXZ,MAAAA,YAAY,CAACY,KAAK,CAACC,SAAN,CAAgBC,OAAjB,CAAZ;AACAC,MAAAA,YAAY,CAACH,KAAK,CAACI,SAAN,CAAgBF,OAAjB,CAAZ;AACAlB,MAAAA,WAAW,CAACgB,KAAK,CAACK,QAAN,CAAeC,IAAhB,CAAX;AACApB,MAAAA,WAAW,CAACc,KAAK,CAACO,QAAN,CAAeD,IAAhB,CAAX;AACH,KATD;AAUH,GAXD;;AAYAnC,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,OAAO;AACP,UAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/Bd,MAAAA,OAAO;AACV,KAF2B,EAEzBb,SAFyB,CAA5B;AAGA,WAAO,MAAM4B,aAAa,CAACF,QAAD,CAA1B;AACH,GANQ,EAMP,EANO,CAAT;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA/BD;;GAAM5B,I;UACaD,S;;;KADbC,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\n  \r\nconst Data = () => {\r\n    const { id } = useParams()\r\n    const MINUTE_MS = 30000;\r\n    const [nameHomeTeam, setHomeTeam] = useState();\r\n    const [nameAwayTeam, setAwayTeam] = useState();\r\n    const [scoreHome, setScoreHome] = useState();\r\n    const [scoreAway, setScoreAway] = useState();\r\n    const [logoHomeTeam, setLogoHomeTeam] = useState([]);\r\n    const [logoAwayTeam, setLogoAwayTeam] = useState([]);\r\n    const getData = () => {\r\n        fetch(\"https://api.sofascore.com/api/v1/event/\"+id)\r\n        .then(response=> {\r\n             return response.json();\r\n        })\r\n        .then(users => {\r\n            setScoreHome(users.homeScore.current);\r\n            setAwayScore(users.awayScore.current);\r\n            setHomeTeam(users.homeTeam.name);\r\n            setAwayTeam(users.awayTeam.name);\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getData()\r\n        const interval = setInterval(() => {\r\n            getData()\r\n        }, MINUTE_MS);\r\n        return () => clearInterval(interval);\r\n    },[])\r\n    return (\r\n        <h1>Hello</h1>\r\n    )\r\n}\r\n\r\nexport default Data;"]},"metadata":{},"sourceType":"module"}