{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cl\\xE9ment\\\\OneDrive\\\\Documents\\\\Scoreboard\\\\ccoreboard\\\\src\\\\pages\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  }\n}));\nexport default function Create() {\n  _s();\n\n  const classes = useStyles();\n  const [matches, setMatches] = React.useState([]);\n  const [live, setLive] = React.useState([]);\n  const items = [];\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  function getLive() {\n    fetch(\"https://api.sofascore.com/api/v1/sport/football/events/live\").then(response => {\n      return response.json();\n    }).then(users => {\n      setLive(users.events);\n      /*for(let i = 0; i< users.events.length;i++){\r\n          setHomeTeamName(users.events[i].homeTeam.name)\r\n          setAwayTeamName(users.events[i].awayTeam.name)\r\n          setHomeTeamScore(users.events[i].homeScore.current)\r\n          setAwayTeamScore(users.events[i].homeScore.current)\r\n      }*/\n    });\n  }\n\n  function getMatches() {\n    fetch(\"https://api.sofascore.com/api/v1/sport/football/scheduled-events/2022-03-25/inverse\").then(response => {\n      return response.json();\n    }).then(users => {\n      setMatches(users.events);\n      /*for(let i = 0; i< users.events.length;i++){\r\n          setHomeTeamName(users.events[i].homeTeam.name)\r\n          setAwayTeamName(users.events[i].awayTeam.name)\r\n          setHomeTeamScore(users.events[i].homeScore.current)\r\n          setAwayTeamScore(users.events[i].homeScore.current)\r\n      }*/\n    });\n  }\n\n  getLive();\n  getMatches();\n\n  for (const [index, value] of live.entries()) {\n    console.log(score);\n    items.push( /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: value.homeTeam.name + \" - \" + value.awayTeam.name,\n        onChange: handleChange,\n        name: value.homeTeam.name + \" - \" + value.awayTeam.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }, this),\n      label: \"Gilad Gray\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this));\n  }\n\n  const {\n    gilad,\n    jason,\n    antoine\n  } = state;\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      required: true,\n      error: error,\n      component: \"fieldset\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Choisis les matches que tu souhaites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: \"You can display an error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"an0FLK2je9mlcu1rgBCjestPuW4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/ClÃ©ment/OneDrive/Documents/Scoreboard/ccoreboard/src/pages/Create.js"],"names":["React","makeStyles","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","Button","useStyles","theme","root","display","formControl","margin","spacing","Create","classes","matches","setMatches","useState","live","setLive","items","state","setState","gilad","jason","antoine","handleChange","event","target","name","checked","getLive","fetch","then","response","json","users","events","getMatches","index","value","entries","console","log","score","push","homeTeam","awayTeam","error","filter","v","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Create() {\r\n  const classes = useStyles();\r\n  const [matches, setMatches] = React.useState([]);\r\n  const [live, setLive] = React.useState([]);\r\n  const items = []\r\n  const [state, setState] = React.useState({\r\n    gilad: true,\r\n    jason: false,\r\n    antoine: false,\r\n  });\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  function getLive(){\r\n    fetch(\"https://api.sofascore.com/api/v1/sport/football/events/live\")\r\n        .then(response=> {\r\n            return response.json();\r\n        })\r\n        .then(users => {\r\n            setLive(users.events)\r\n            /*for(let i = 0; i< users.events.length;i++){\r\n                setHomeTeamName(users.events[i].homeTeam.name)\r\n                setAwayTeamName(users.events[i].awayTeam.name)\r\n                setHomeTeamScore(users.events[i].homeScore.current)\r\n                setAwayTeamScore(users.events[i].homeScore.current)\r\n            }*/\r\n        })\r\n  }\r\n  function getMatches(){\r\n    fetch(\"https://api.sofascore.com/api/v1/sport/football/scheduled-events/2022-03-25/inverse\")\r\n        .then(response=> {\r\n            return response.json();\r\n        })\r\n        .then(users => {\r\n            setMatches(users.events)\r\n            /*for(let i = 0; i< users.events.length;i++){\r\n                setHomeTeamName(users.events[i].homeTeam.name)\r\n                setAwayTeamName(users.events[i].awayTeam.name)\r\n                setHomeTeamScore(users.events[i].homeScore.current)\r\n                setAwayTeamScore(users.events[i].homeScore.current)\r\n            }*/\r\n        })\r\n  }\r\n  getLive()\r\n  getMatches()\r\n\r\n  for (const [index, value] of live.entries()) {\r\n    console.log(score)\r\n    items.push(\r\n      <FormControlLabel\r\n      control={<Checkbox checked={value.homeTeam.name+\" - \"+value.awayTeam.name} onChange={handleChange} name={value.homeTeam.name+\" - \"+value.awayTeam.name} />}\r\n      label=\"Gilad Gray\"\r\n    />\r\n        )\r\n}\r\n\r\n  const { gilad, jason, antoine } = state;\r\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\r\n        <FormLabel component=\"legend\">Choisis les matches que tu souhaites</FormLabel>\r\n        <FormGroup>\r\n\r\n          \r\n        </FormGroup>\r\n        <FormHelperText>You can display an error</FormHelperText>\r\n      </FormControl>\r\n      <Button>Valider</Button>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}